export class ValueError extends Error {
  constructor(msg = 'Bank account error') { super(msg); }
}

export class BankAccount {
  private _balance: number = NaN;

  open() {
    if (!isNaN(this._balance)) { throw new ValueError(); }
    this._balance = 0;
  }

  close() {
    if (isNaN(this._balance)) { throw new ValueError(); }
    this._balance = NaN;
  }

  deposit(amount: number) {
    if (isNaN(this._balance) || amount < 0) { throw new ValueError(); }
    this._balance += amount;
  }

  withdraw(amount: number) {
    if (isNaN(this._balance) || amount < 0 || amount > this._balance) {
      throw new ValueError();
    }
    this._balance -= amount;
  }

  get balance(): number {
    if (isNaN(this._balance)) { throw new ValueError(); }
    return this._balance;
  }
}
