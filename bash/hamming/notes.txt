#!/usr/bin/env bash

error () {
  printf '%s\n' "$*"
  exit 1
}

main () {
  (( $# == 2 )) || error 'Usage: hamming.sh <string1> <string2>'

  # Regular vars are easier to read when doing fancy parameter expansion.
  a=$1 b=$2
  # Using the a==b||... pattern everywhere in this function. I like consistency.
  (( ${#a} == ${#b} )) || error 'left and right strands must be of equal length'

  declare -i count
  for (( i = 0; i < ${#a}; i++ )); do
    [[ ${a:i:1} == "${b:i:1}" ]] || count+=1
  done

  printf '%d\n' "$count"
}

main "$@"


#!/usr/bin/env bash

main () {
  (( ${#*} < 2 )) && echo "Usage: hamming.sh <string1> <string2>" && exit 1
  (( ${#1} != ${#2} )) && echo "strands must be of equal length" && exit 1

  local diff=0
  local i
  for (( i=0; i<${#1}; i++ )); do
    [ "${1:$i:1}" != "${2:$i:1}" ] && (( diff++ ))
  done

  echo $diff
}

main "$@"


#!/usr/bin/env bash
(( "$#" != 2 )) && echo "Usage: hamming.sh <string1> <string2>" && exit 1
(( "${#1}" != "${#2}" )) && echo "strands must be of equal length" && exit 1
echo "$1" > file1; echo "$2" > file2; cmp -l file1 file2 | wc -l
