# is_armstrong_number() {
#     (($# > 0)) || error "Usage: is_armstrong_number <number>"

#     num=$1
#     num_digits=${#num}

#     # Calculate the sum of digits raised to the power of num_digits
#     sum=$(echo "$num" | grep -o . | awk -v pow="$num_digits" '{ sum += $1 ^ pow } END { print sum }')

#     # Compare the sum to the original number
#     if ((sum == num)); then
#         echo "true"
#     else
#         echo "false"
#     fi
# }


# error() {
#     printf '%s\n' "$*"
#     exit 1
# }

# is_armstrong_number() {
#     (($# > 0)) || error "Usage: is_armstrong_number <number>"

#     num=$1

#     num_digits=${#num}

#     sum=0
#     for ((i = 0; i < num_digits; i++)); do
#         digit=${num:i:1}

#         power=1
#         for ((j = 0; j < num_digits; j++)); do
#             power=$((power * digit))
#         done

#         sum=$((sum + power))
#     done

#     if [ $sum -eq "$num" ]; then
#         echo "true"
#     else
#         echo "false"
#     fi
# }

# is_armstrong_number "$@"

#!/usr/bin/env bash

num=$1
len=${#num}
total=0

for ((i=0; i<$len; i++)); do
	total=$((total + (${num:$i:1}**len) ))
done

[[ $total -eq $num ]] && echo "true" || echo "false"


#!/usr/bin/env bash

while read -n 1 digit
do
    let squaresum+=digit**${#1}
done <<< "$1"

if (($1 == $squaresum))
then
    echo "true"
else
    echo "false"
fi


#!/usr/bin/env bash

main () {
    number=$1
    num_digits=${#number}

    for ((i = 0 ; i < num_digits ; i++)); do
        digit="${number:i:1}"
        power=$(( digit ** num_digits ))
        res=$(( res + power ))
    done

    if [[ $res -eq $number ]]; then
        echo "true"
    else
        echo "false"
    fi
}

main "$@"
